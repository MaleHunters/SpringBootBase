配置使用JPA
  1，使用Spring Data JPA 建立数据访问层只需要集成 JpaRepository的接口：
  代码如下：
  public interface PersonRepository extends JpaRepository<Person,Long>{
  }
  2，继承 JpaRepository接口后我们就可以使用下面几种数据访问的方法：
  List<T> findAll();
  List<T> findAll(Sort var1);
  List<T> findAll(Iterable<ID> var1);
  <S extends T> List<S> save(Iterable<S> var1);
  void flush();
  <S extends T> S saveAndFlush(S var1);
  void deleteInBatch(Iterable<T> var1);
  void deleteAllInBatch();
  T getOne(ID var1);
  <S extends T> List<S> findAll(Example<S> var1);
  <S extends T> List<S> findAll(Example<S> var1, Sort var2);
  3，使用Spring Data JPA可以通过@EnableJpaRepositories注解来开启Spring Data Jpa的支持，
     接收到的value参数用来扫描数据访问层所在包下的数据访问的接口定义：
      @Configuration
      @EnableJpaRepositories（“org.cxzc.myyoung”）
      public class JpaConfiguration{
       @Bean
       public EntityManagerFactory entityManageFactory(){
      }
      }
  4，定义查询方法
  #常规查询
  根据属性名称来定义查询方法
  public interface PersonResopitory extends JpaRepository <Person,Long> {
    //通过名称相等查询，参数为name
    //相当于 select p from Person p where p.name=？1
    List<Person> findByName(String name)
    //相当于 select p from Person p where p.name like ？1
    List<Person> findByNameLike(String name)
  }
  #限制结果查询
  结果数量是使用 top和first 扥关键字来实现的,例如：
  public interface PersonResopitory extends JpaRepository <Person,Long> {
    //获得符合查询条件的前10条数据
    List<Person> findFirst10ByName(String name)
  }
  #使用 JPA的NamedQuery查询
  Spring Data JPA支持使用 JPA的NamedQuery 来定义查询方法，即一个名称映射一个查询语句
  定义如下：
  @Entity
  @NamedQuery(name = "Person.findName"),
    query = "select p from Person p where p.name = ?1"
   public class Person{
   }
  使用如下
  public interface PersonResopitory extends JpaRepository <Person,Long> {
    //获我们使用NamedQuery 里面定义的查询语句，不是根据名称查询
    List<Person> findByName(String name)
  }

  #使用@Query查询
  Spring Data Jpa还支持使用@Query注解在接口的方法上实现查询，例如：
  public interface PersonResopitory extends JpaRepository <Person,Long> {
   @Query("select p from Person p where p.address = ?1")
    List<Person> findByAddress(String address)
  }
