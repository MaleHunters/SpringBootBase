1.数据库事务
  Spring声明式事物的实现，有两种方式；第一种是配置xml，第二种是使用相关注解
  Spring Boot 使用事务非常简单，首先使用注解 @EnableTransactionManagement 开启事务支持后,
  然后在访问数据库的Service方法上添加注解 @Transactional 便可。
  关于事务管理器，不管是JPA还是JDBC等都实现自接口 PlatformTransactionManager 如果你添加的
  是 spring-boot-starter-jdbc 依赖，框架会默认注入 DataSourceTransactionManager 实例。
  如果你添加的是 spring-boot-starter-data-jpa 依赖，框架会默认注入 JpaTransactionManager 实例。
2.Transactional 注解的常用属性表
  给出Transactional 注解的常用属性表：
  propagation
  事务的传播行为，默认值为 REQUIRED。
  isolation
  事务的隔离度，默认值采用 DEFAULT
  timeout
  事务的超时时间，默认值为-1，不超时。
  如果设置了超时时间(单位秒)，那么如果超过该时间限制了但事务还没有完成，则自动回滚事务
  read-only
  指定事务是否为只读事务，默认值为 false；为了忽略那些不需要事务的方法，比如读取数据，可
  设置 read-only 为 true。
  rollbackFor
  用于指定能够触发事务回滚的异常类型，如果有多个异常类型需要指定，
  各类型之间可以通过逗号分隔。{xxx1.class, xxx2.class,……}
  noRollbackFor
  抛出 no-rollback-for 指定的异常类型，不回滚事务。{xxx1.class, xxx2.class,……}
3.